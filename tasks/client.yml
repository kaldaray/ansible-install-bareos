---
- name: Получение информации о службах сервера
  service_facts:
  register: services_state
  
- name: Импорт переменных
  include_vars: "{{ ansible_os_family }}.yml"

- name: RedHat | Импорт переменных
  include_vars: "{{ ansible_os_family }}-{{ ansible_distribution_version.split('.')[0] }}.yml"
  when:
  - ansible_os_family == 'RedHat'
  - ansible_distribution != 'Fedora'

# Setup/install tasks.
- include_tasks: setup-RedHat.yml
  when: ansible_os_family == 'RedHat'

- include_tasks: setup-Ubuntu.yml
  when: ansible_distribution == 'Ubuntu'

 
- name: "Creating client directory"
  file:
    path: "{{ bareos_fd }}/client"
    state: directory
    owner: bareos
    group: bareos
    mode: 0750
    recurse: yes

- name: "Creating director directory"
  file:
    path: "{{ bareos_fd }}/director"
    state: directory
    owner: bareos
    group: bareos
    mode: 0750
    recurse: yes

- name: "Creating messages directory"
  file:
    path: "{{ bareos_fd }}/messages"
    state: directory
    owner: bareos
    group: bareos
    mode: 0750
    recurse: yes

- name: "Загрузка конфигурационных файлов Bareos-fd"
  template: 
    src: "{{ item.src }}" 
    dest: "{{ item.dest }}" 
    mode: 0750 
    owner: bareos
    group: bareos
  with_items:
      - { src: '../templates/setup_client_files/myself.conf.j2', dest: '{{ bareos_fd }}/client/myself.conf' }
      - { src: '../templates/setup_client_files/Standard.conf', dest: '{{ bareos_fd }}/messages/Standard.conf' }
      - { src: '../templates/setup_client_files/bareos-dir.conf.j2', dest: '{{ bareos_fd }}/director/bareos-dir.conf' }

# - name: "Проверка наличия записи в /etc/hosts для внутренних ландшафтов"
#   lineinfile:
#     dest: /etc/hosts
#     state: present
#     regexp: '^([0-9]{1,3}.){3}[0-9]{1,3}(\s)*backups'
#     line: "10.0.1.19 backups"
#   when:
#     - local_ip is defined

# - name: "Проверка наличия записи в /etc/hosts для ландшафтов клиентов"
#   lineinfile:
#     dest: /etc/hosts
#     state: present
#     regexp: '^([0-9]{1,3}.){3}[0-9]{1,3}(\s)*backups'
#     line: "185.47.36.19 backups"
#   when:
#     - local_ip is not defined

- name: "Копирование скрипта postgresql_backup.sh для бэкапа Postgres"
  include_tasks: client_postgres.yml
  when: bareos_backup_type == "postgres_full"
  
- name: reload_firewalld_client
  command: firewall-cmd --reload
  when: services_state.ansible_facts.services['firewalld.service'] is defined and services_state.ansible_facts.services['firewalld.service'].status == "enabled"

- name: Включение службы bareos-fd
  systemd:
      name: bareos-fd
      daemon_reload: yes
      enabled: yes
      state: started